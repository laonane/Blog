<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts PUBLIC
		"-//Apache Software Foundation//DTD Struts Configuration 2.5//EN"
		"http://struts.apache.org/dtds/struts-2.5.dtd">
<struts>
	<!--        设置开发模式-->
	<constant name="struts.devMode" value="true"/>
	<constant name="struts.ognl.allowStaticMethodAccess" value="true"/>
	<package name="Blog" extends="struts-default">
		
		<!--拦截器-->
		<interceptors>
			<interceptor name="loginInterceptor" class="wiki.laona.web.LoginInterceptor"></interceptor>
		</interceptors>
		
		<global-results>
			<result name="login">/mgr_login.jsp</result>
		</global-results>
		
		<action name="location_*" class="locationAction" method="{1}">
			<result name="left">/WEB-INF/mgr/mgr_left.jsp</result>
			<result name="top">/WEB-INF/mgr/mgr_top.jsp</result>
			<result name="account">/WEB-INF/mgr/mgr_account.jsp</result>
			<result name="add_article">/WEB-INF/mgr/mgr_add_article.jsp</result>
			<interceptor-ref name="loginInterceptor"/>
			<interceptor-ref name="defaultStack"/>
			<allowed-methods>left,top,account,add_article</allowed-methods>
		</action>
		
		<!--                &lt;!&ndash;全局结果页，如果在action中没有结果页，那就到全局里面找全局结果页&ndash;&gt;
						<global-results>
							<result name="login">/login.jsp</result>
							&lt;!&ndash;
								配置input属性可以在类型转换错误的时候，出现报错信息
								在Struts内部具有很多拦截器，当执行到参数拦截器的时候，会自动数据存储区域的错误信息区查找错误，
								最后 workflow 会检查是否有错误信息，如果有则转跳到 input 逻辑区，如果没有就直接到目标 action 中
							&ndash;&gt;
							<result name="input">/index.jsp</result>
						</global-results>
						-->
		<!--登录 action-->
		<action name="loginAction_*" class="loginAction" method="{1}">
			<!--登录成功-->
			<result name="success">/WEB-INF/mgr/mgr_index.jsp</result>
			<!--登录失败-->
			<!--<result name="login">/mgr_login.jsp</result>-->
			<!--退出登录-->
			<result name="login_out" type="redirect">/mgr_login.jsp</result>
			<interceptor-ref name="loginInterceptor">
				<!--允许放行的方法-->
				<param name="excludeMethods">login</param>
			</interceptor-ref>
			<interceptor-ref name="defaultStack"/>
			<allowed-methods>login, loginOut</allowed-methods>
		</action>
		
		<!--
			分类 action
			type:redirect           重定向 url
			type:redirectAction     重定向到 action
		-->
		<action name="category_*" class="categoryAction" method="{1}">
			<!--<result name="success"  type="redirect">/mgr_category.jsp</result>-->
			<!--<result name="category_list"  type="redirect">/mgr_category.jsp</result>-->
			<result name="category_list">/WEB-INF/mgr/mgr_category.jsp</result>
			<!--重定向到  category_list.action 中-->
			<result name="list_action" type="redirectAction">category_list.action</result>
			<interceptor-ref name="loginInterceptor"/>
			<interceptor-ref name="defaultStack"/>
			<allowed-methods>add, list, updateUI, update</allowed-methods>
		</action>
		
		<!--文章列表-->
		<action name="article_*" class="articleAction" method="{1}">
			<result name="list">/WEB-INF/mgr/mgr_main.jsp</result>
			<result name="edit_article">/WEB-INF/mgr/mgr_edit_article.jsp</result>
			<result name="list_res" type="redirectAction">article_pageList.action</result>
			<interceptor-ref name="loginInterceptor">
				<!--允许放行的方法-->
				<param name="excludeMethods">getCategory</param>
			</interceptor-ref>
			<interceptor-ref name="defaultStack"/>
			<allowed-methods>list, pageList, delete, getCategory, add, edit, update</allowed-methods>
		</action>
		
		<!--	前端页面 action -->
		<action name="web_*" class="webAction" method="{1}">
			<allowed-methods>getPageList, getArticleDetail</allowed-methods>
		</action>
	
	</package>

</struts>